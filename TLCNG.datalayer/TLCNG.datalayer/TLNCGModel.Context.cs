//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TLCNG.datalayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using TLCNG.entities;

    public partial class BDCatastroTulancingoEntities : DbContext
    {
        public BDCatastroTulancingoEntities()
            : base("name=BDCatastroTulancingoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CAJAS_Avaluos> CAJAS_Avaluos { get; set; }
        public virtual DbSet<CAJAS_Constancias> CAJAS_Constancias { get; set; }
        public virtual DbSet<CAJAS_DatosTrasladoRecibo> CAJAS_DatosTrasladoRecibo { get; set; }
        public virtual DbSet<CAJAS_Descuento> CAJAS_Descuento { get; set; }
        public virtual DbSet<CAJAS_HistorialBancos> CAJAS_HistorialBancos { get; set; }
        public virtual DbSet<CAJAS_HistorialPago> CAJAS_HistorialPago { get; set; }
        public virtual DbSet<CAJAS_HistorialPagosCancelados> CAJAS_HistorialPagosCancelados { get; set; }
        public virtual DbSet<CAJAS_HistorialPredioTraslados> CAJAS_HistorialPredioTraslados { get; set; }
        public virtual DbSet<CAJAS_HistorialTraslados> CAJAS_HistorialTraslados { get; set; }
        public virtual DbSet<CAJAS_HistorialUbicacion> CAJAS_HistorialUbicacion { get; set; }
        public virtual DbSet<CAJAS_HistorialUsuariosBaja> CAJAS_HistorialUsuariosBaja { get; set; }
        public virtual DbSet<CAJAS_Pago> CAJAS_Pago { get; set; }
        public virtual DbSet<CAJAS_PagosAvaluosPendientes> CAJAS_PagosAvaluosPendientes { get; set; }
        public virtual DbSet<CAJAS_PagosDiversos> CAJAS_PagosDiversos { get; set; }
        public virtual DbSet<CAJAS_PagosPendientesCatastro> CAJAS_PagosPendientesCatastro { get; set; }
        public virtual DbSet<CAJAS_PagosPredial> CAJAS_PagosPredial { get; set; }
        public virtual DbSet<CAJAS_SecuenciaFolio> CAJAS_SecuenciaFolio { get; set; }
        public virtual DbSet<CAJAS_Traslado> CAJAS_Traslado { get; set; }
        public virtual DbSet<CANCELADO_CAJAS_Avaluos> CANCELADO_CAJAS_Avaluos { get; set; }
        public virtual DbSet<CANCELADO_CAJAS_Pago> CANCELADO_CAJAS_Pago { get; set; }
        public virtual DbSet<CANCELADO_CAJAS_PagosDiversos> CANCELADO_CAJAS_PagosDiversos { get; set; }
        public virtual DbSet<CANCELADO_CAJAS_PagosPredial> CANCELADO_CAJAS_PagosPredial { get; set; }
        public virtual DbSet<CANCELADO_CAJAS_SecuenciaFolio> CANCELADO_CAJAS_SecuenciaFolio { get; set; }
        public virtual DbSet<CANCELADO_CAJAS_Traslado> CANCELADO_CAJAS_Traslado { get; set; }
        public virtual DbSet<CANCELADO_SIS_Adeudos> CANCELADO_SIS_Adeudos { get; set; }
        public virtual DbSet<CANCELADO_SIS_Avaluos> CANCELADO_SIS_Avaluos { get; set; }
        public virtual DbSet<CANCELADO_SIS_DetallesDeDescuentos> CANCELADO_SIS_DetallesDeDescuentos { get; set; }
        public virtual DbSet<CANCELADO_SIS_DetallesDeTerreno> CANCELADO_SIS_DetallesDeTerreno { get; set; }
        public virtual DbSet<CANCELADO_SIS_Info_Manzanas> CANCELADO_SIS_Info_Manzanas { get; set; }
        public virtual DbSet<CANCELADO_SIS_Nota> CANCELADO_SIS_Nota { get; set; }
        public virtual DbSet<CANCELADO_SIS_Predios> CANCELADO_SIS_Predios { get; set; }
        public virtual DbSet<CANCELADO_SIS_Propietarios> CANCELADO_SIS_Propietarios { get; set; }
        public virtual DbSet<CAT_ActualImpuesPredial> CAT_ActualImpuesPredial { get; set; }
        public virtual DbSet<CAT_Bimestre> CAT_Bimestre { get; set; }
        public virtual DbSet<CAT_Bimestre1> CAT_Bimestre1 { get; set; }
        public virtual DbSet<CAT_CAJAS_FormaDePago> CAT_CAJAS_FormaDePago { get; set; }
        public virtual DbSet<CAT_CAJAS_ImpresionMapa> CAT_CAJAS_ImpresionMapa { get; set; }
        public virtual DbSet<CAT_CAJAS_PagoEjido> CAT_CAJAS_PagoEjido { get; set; }
        public virtual DbSet<CAT_CAJAS_PagoMinimo> CAT_CAJAS_PagoMinimo { get; set; }
        public virtual DbSet<CAT_CAJAS_PagosDiversos> CAT_CAJAS_PagosDiversos { get; set; }
        public virtual DbSet<CAT_CAJAS_TipoConstancia> CAT_CAJAS_TipoConstancia { get; set; }
        public virtual DbSet<CAT_CAJAS_TipoDeDescuento> CAT_CAJAS_TipoDeDescuento { get; set; }
        public virtual DbSet<CAT_CAJAS_TipoOperacion> CAT_CAJAS_TipoOperacion { get; set; }
        public virtual DbSet<CAT_CAJAS_UbicacionDePago> CAT_CAJAS_UbicacionDePago { get; set; }
        public virtual DbSet<CAT_Categoria> CAT_Categoria { get; set; }
        public virtual DbSet<CAT_Coordinacion> CAT_Coordinacion { get; set; }
        public virtual DbSet<CAT_DescripcionFolio> CAT_DescripcionFolio { get; set; }
        public virtual DbSet<CAT_Director> CAT_Director { get; set; }
        public virtual DbSet<CAT_EstatusEjecucion> CAT_EstatusEjecucion { get; set; }
        public virtual DbSet<CAT_JefesDepartamentos> CAT_JefesDepartamentos { get; set; }
        public virtual DbSet<CAT_modulo> CAT_modulo { get; set; }
        public virtual DbSet<CAT_nombrePermiso> CAT_nombrePermiso { get; set; }
        public virtual DbSet<CAT_perfil> CAT_perfil { get; set; }
        public virtual DbSet<CAT_permiso> CAT_permiso { get; set; }
        public virtual DbSet<CAT_PersonaVulnerable> CAT_PersonaVulnerable { get; set; }
        public virtual DbSet<CAT_puesto> CAT_puesto { get; set; }
        public virtual DbSet<CAT_Sexo> CAT_Sexo { get; set; }
        public virtual DbSet<CAT_sistema> CAT_sistema { get; set; }
        public virtual DbSet<CAT_TipoCambio> CAT_TipoCambio { get; set; }
        public virtual DbSet<CAT_TipoCategoria> CAT_TipoCategoria { get; set; }
        public virtual DbSet<CAT_TipoColonia> CAT_TipoColonia { get; set; }
        public virtual DbSet<CAT_TipoConstruccion> CAT_TipoConstruccion { get; set; }
        public virtual DbSet<CAT_TipoOperacion> CAT_TipoOperacion { get; set; }
        public virtual DbSet<CAT_tipoPerfil> CAT_tipoPerfil { get; set; }
        public virtual DbSet<CAT_TipoPredioEnCalculo> CAT_TipoPredioEnCalculo { get; set; }
        public virtual DbSet<CAT_TipoPredioEnCalculo1> CAT_TipoPredioEnCalculo1 { get; set; }
        public virtual DbSet<CAT_TipoPropietario> CAT_TipoPropietario { get; set; }
        public virtual DbSet<CAT_TiposDeVialidad> CAT_TiposDeVialidad { get; set; }
        public virtual DbSet<CAT_TRASLADOS_Dependencias> CAT_TRASLADOS_Dependencias { get; set; }
        public virtual DbSet<CAT_TRASLADOS_DiasFestivos> CAT_TRASLADOS_DiasFestivos { get; set; }
        public virtual DbSet<CAT_TRASLADOS_EstatusFlujo> CAT_TRASLADOS_EstatusFlujo { get; set; }
        public virtual DbSet<CAT_TRASLADOS_Historial_Notaria> CAT_TRASLADOS_Historial_Notaria { get; set; }
        public virtual DbSet<CAT_TRASLADOS_NombreFestividades> CAT_TRASLADOS_NombreFestividades { get; set; }
        public virtual DbSet<CAT_TRASLADOS_Notarias> CAT_TRASLADOS_Notarias { get; set; }
        public virtual DbSet<CAT_TRASLADOS_PagoMinimoAvaluo> CAT_TRASLADOS_PagoMinimoAvaluo { get; set; }
        public virtual DbSet<CAT_TRASLADOS_PorcTasa> CAT_TRASLADOS_PorcTasa { get; set; }
        public virtual DbSet<CAT_TRASLADOS_Solicitante> CAT_TRASLADOS_Solicitante { get; set; }
        public virtual DbSet<CAT_TRASLADOS_TareasFlujo> CAT_TRASLADOS_TareasFlujo { get; set; }
        public virtual DbSet<CAT_TRASLADOS_TipoProceso> CAT_TRASLADOS_TipoProceso { get; set; }
        public virtual DbSet<CAT_TRASLADOS_TOperacion> CAT_TRASLADOS_TOperacion { get; set; }
        public virtual DbSet<CAT_UbicacionCajas> CAT_UbicacionCajas { get; set; }
        public virtual DbSet<Indices1> Indices1 { get; set; }
        public virtual DbSet<Multas> Multas { get; set; }
        public virtual DbSet<Operaciones> Operaciones { get; set; }
        public virtual DbSet<Salarios> Salarios { get; set; }
        public virtual DbSet<SIS_Adeudos> SIS_Adeudos { get; set; }
        public virtual DbSet<SIS_Adeudos_Temporal> SIS_Adeudos_Temporal { get; set; }
        public virtual DbSet<SIS_AñosGenerados> SIS_AñosGenerados { get; set; }
        public virtual DbSet<SIS_Avaluos> SIS_Avaluos { get; set; }
        public virtual DbSet<SIS_AvaluosEjecucion> SIS_AvaluosEjecucion { get; set; }
        public virtual DbSet<SIS_DetallesDeDescuentos> SIS_DetallesDeDescuentos { get; set; }
        public virtual DbSet<SIS_DetallesDeTerreno> SIS_DetallesDeTerreno { get; set; }
        public virtual DbSet<SIS_DetallesDeTerreno_Temporal> SIS_DetallesDeTerreno_Temporal { get; set; }
        public virtual DbSet<SIS_DetallesDeTerrenoEjecucion> SIS_DetallesDeTerrenoEjecucion { get; set; }
        public virtual DbSet<SIS_HistorialAdeudo> SIS_HistorialAdeudo { get; set; }
        public virtual DbSet<SIS_HistorialAvaluo> SIS_HistorialAvaluo { get; set; }
        public virtual DbSet<SIS_HistorialBDViejo> SIS_HistorialBDViejo { get; set; }
        public virtual DbSet<SIS_HistorialDetallesDeTerreno> SIS_HistorialDetallesDeTerreno { get; set; }
        public virtual DbSet<SIS_HistorialGeneral> SIS_HistorialGeneral { get; set; }
        public virtual DbSet<SIS_HistorialMovimientosPredio> SIS_HistorialMovimientosPredio { get; set; }
        public virtual DbSet<SIS_HistorialPredios> SIS_HistorialPredios { get; set; }
        public virtual DbSet<SIS_HistorialPropietarios> SIS_HistorialPropietarios { get; set; }
        public virtual DbSet<SIS_HistorialUsuario> SIS_HistorialUsuario { get; set; }
        public virtual DbSet<SIS_Info_Manzanas> SIS_Info_Manzanas { get; set; }
        public virtual DbSet<SIS_Nota> SIS_Nota { get; set; }
        public virtual DbSet<SIS_ParametrosRecargoAnual> SIS_ParametrosRecargoAnual { get; set; }
        public virtual DbSet<SIS_ParametrosRecargoBimestral> SIS_ParametrosRecargoBimestral { get; set; }
        public virtual DbSet<SIS_PermisosEspeciales> SIS_PermisosEspeciales { get; set; }
        public virtual DbSet<SIS_Predios> SIS_Predios { get; set; }
        public virtual DbSet<SIS_PrediosEjecucion> SIS_PrediosEjecucion { get; set; }
        public virtual DbSet<SIS_Propietarios> SIS_Propietarios { get; set; }
        public virtual DbSet<SIS_RechazosTraslados> SIS_RechazosTraslados { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TRA_Adeudo> TRA_Adeudo { get; set; }
        public virtual DbSet<TRA_Fusion> TRA_Fusion { get; set; }
        public virtual DbSet<TRA_Historial_Rechazo> TRA_Historial_Rechazo { get; set; }
        public virtual DbSet<TRA_ParametrosLeyDeIngresos> TRA_ParametrosLeyDeIngresos { get; set; }
        public virtual DbSet<TRA_Predio> TRA_Predio { get; set; }
        public virtual DbSet<TRA_Propietarios> TRA_Propietarios { get; set; }
        public virtual DbSet<TRA_Rechazo> TRA_Rechazo { get; set; }
        public virtual DbSet<TRA_SeguimientoFlujo> TRA_SeguimientoFlujo { get; set; }
        public virtual DbSet<TRA_Tramite> TRA_Tramite { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Usuarios_HistorialJefaturas> Usuarios_HistorialJefaturas { get; set; }
        public virtual DbSet<UsuarioVisor> UsuarioVisor { get; set; }
        public virtual DbSet<Adeudos_020118> Adeudos_020118 { get; set; }
        public virtual DbSet<CAT_AbreviaturasColonias> CAT_AbreviaturasColonias { get; set; }
        public virtual DbSet<CAT_Colonia> CAT_Colonia { get; set; }
        public virtual DbSet<CAT_TRASLADOS_Configuraciones> CAT_TRASLADOS_Configuraciones { get; set; }
        public virtual DbSet<holddups> holddups { get; set; }
        public virtual DbSet<holddups2> holddups2 { get; set; }
        public virtual DbSet<holdkey> holdkey { get; set; }
        public virtual DbSet<holdkey2> holdkey2 { get; set; }
        public virtual DbSet<INCONSISTENCIAS_CATASTRO_ADEUDOS> INCONSISTENCIAS_CATASTRO_ADEUDOS { get; set; }
        public virtual DbSet<RESP_SIS_DetallesDeTerreno> RESP_SIS_DetallesDeTerreno { get; set; }
        public virtual DbSet<SIS_HectareasCobradas> SIS_HectareasCobradas { get; set; }
        public virtual DbSet<SIS_NumeroDeCuentaDisponible> SIS_NumeroDeCuentaDisponible { get; set; }
        public virtual DbSet<TRA_FlujoxProceso> TRA_FlujoxProceso { get; set; }
        public virtual DbSet<Historial2000_2013norepetidos> Historial2000_2013norepetidos { get; set; }
        public virtual DbSet<historial2014> historial2014 { get; set; }
        public virtual DbSet<Hitorial2000_2013> Hitorial2000_2013 { get; set; }
        public virtual DbSet<VISTA_ADEUDOS> VISTA_ADEUDOS { get; set; }
        public virtual DbSet<VISTA_DetalleDeTerreno> VISTA_DetalleDeTerreno { get; set; }
        public virtual DbSet<VISTA_PAGOS> VISTA_PAGOS { get; set; }
    
        public virtual ObjectResult<ActualizarDatosPredial_Result> ActualizarDatosPredial(string clave, string numeroCuenta, Nullable<int> añoActual, string nombreUsuarioModifica, Nullable<decimal> nuevaBaseCatastral, Nullable<decimal> nuevaAreaTerreno, Nullable<decimal> nuevaAreaConstruccionH, Nullable<decimal> nuevaAreaConstruccionC, Nullable<decimal> nuevaAreaConstruccionI, Nullable<int> idColoniaDePredio, string nombreCalle, string numeroExterior, string numeroInterior, string codigoPostal, string ubicacion, string idTipoDeVialidad)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var numeroCuentaParameter = numeroCuenta != null ?
                new ObjectParameter("NumeroCuenta", numeroCuenta) :
                new ObjectParameter("NumeroCuenta", typeof(string));
    
            var añoActualParameter = añoActual.HasValue ?
                new ObjectParameter("añoActual", añoActual) :
                new ObjectParameter("añoActual", typeof(int));
    
            var nombreUsuarioModificaParameter = nombreUsuarioModifica != null ?
                new ObjectParameter("NombreUsuarioModifica", nombreUsuarioModifica) :
                new ObjectParameter("NombreUsuarioModifica", typeof(string));
    
            var nuevaBaseCatastralParameter = nuevaBaseCatastral.HasValue ?
                new ObjectParameter("NuevaBaseCatastral", nuevaBaseCatastral) :
                new ObjectParameter("NuevaBaseCatastral", typeof(decimal));
    
            var nuevaAreaTerrenoParameter = nuevaAreaTerreno.HasValue ?
                new ObjectParameter("NuevaAreaTerreno", nuevaAreaTerreno) :
                new ObjectParameter("NuevaAreaTerreno", typeof(decimal));
    
            var nuevaAreaConstruccionHParameter = nuevaAreaConstruccionH.HasValue ?
                new ObjectParameter("NuevaAreaConstruccionH", nuevaAreaConstruccionH) :
                new ObjectParameter("NuevaAreaConstruccionH", typeof(decimal));
    
            var nuevaAreaConstruccionCParameter = nuevaAreaConstruccionC.HasValue ?
                new ObjectParameter("NuevaAreaConstruccionC", nuevaAreaConstruccionC) :
                new ObjectParameter("NuevaAreaConstruccionC", typeof(decimal));
    
            var nuevaAreaConstruccionIParameter = nuevaAreaConstruccionI.HasValue ?
                new ObjectParameter("NuevaAreaConstruccionI", nuevaAreaConstruccionI) :
                new ObjectParameter("NuevaAreaConstruccionI", typeof(decimal));
    
            var idColoniaDePredioParameter = idColoniaDePredio.HasValue ?
                new ObjectParameter("IdColoniaDePredio", idColoniaDePredio) :
                new ObjectParameter("IdColoniaDePredio", typeof(int));
    
            var nombreCalleParameter = nombreCalle != null ?
                new ObjectParameter("NombreCalle", nombreCalle) :
                new ObjectParameter("NombreCalle", typeof(string));
    
            var numeroExteriorParameter = numeroExterior != null ?
                new ObjectParameter("NumeroExterior", numeroExterior) :
                new ObjectParameter("NumeroExterior", typeof(string));
    
            var numeroInteriorParameter = numeroInterior != null ?
                new ObjectParameter("NumeroInterior", numeroInterior) :
                new ObjectParameter("NumeroInterior", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("Ubicacion", ubicacion) :
                new ObjectParameter("Ubicacion", typeof(string));
    
            var idTipoDeVialidadParameter = idTipoDeVialidad != null ?
                new ObjectParameter("IdTipoDeVialidad", idTipoDeVialidad) :
                new ObjectParameter("IdTipoDeVialidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ActualizarDatosPredial_Result>("ActualizarDatosPredial", claveParameter, numeroCuentaParameter, añoActualParameter, nombreUsuarioModificaParameter, nuevaBaseCatastralParameter, nuevaAreaTerrenoParameter, nuevaAreaConstruccionHParameter, nuevaAreaConstruccionCParameter, nuevaAreaConstruccionIParameter, idColoniaDePredioParameter, nombreCalleParameter, numeroExteriorParameter, numeroInteriorParameter, codigoPostalParameter, ubicacionParameter, idTipoDeVialidadParameter);
        }
    
        public virtual int AjusteAdeudo(string clave, string cuenta, Nullable<int> año)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var cuentaParameter = cuenta != null ?
                new ObjectParameter("cuenta", cuenta) :
                new ObjectParameter("cuenta", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AjusteAdeudo", claveParameter, cuentaParameter, añoParameter);
        }
    
        public virtual ObjectResult<aniosprueba_Result> aniosprueba(string numerocta, string clavecta)
        {
            var numeroctaParameter = numerocta != null ?
                new ObjectParameter("Numerocta", numerocta) :
                new ObjectParameter("Numerocta", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aniosprueba_Result>("aniosprueba", numeroctaParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<Certificado_De_Valor_Result> Certificado_De_Valor(string numeroDeCuenta, string clave)
        {
            var numeroDeCuentaParameter = numeroDeCuenta != null ?
                new ObjectParameter("NumeroDeCuenta", numeroDeCuenta) :
                new ObjectParameter("NumeroDeCuenta", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Certificado_De_Valor_Result>("Certificado_De_Valor", numeroDeCuentaParameter, claveParameter);
        }
    
        public virtual ObjectResult<CobroConstancias_Result> CobroConstancias(Nullable<int> numeroOperacion)
        {
            var numeroOperacionParameter = numeroOperacion.HasValue ?
                new ObjectParameter("numeroOperacion", numeroOperacion) :
                new ObjectParameter("numeroOperacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CobroConstancias_Result>("CobroConstancias", numeroOperacionParameter);
        }
    
        public virtual ObjectResult<CobroPagosAvaluos_Result> CobroPagosAvaluos(Nullable<int> numeroOperacion, Nullable<int> idAvaluoPendiente)
        {
            var numeroOperacionParameter = numeroOperacion.HasValue ?
                new ObjectParameter("numeroOperacion", numeroOperacion) :
                new ObjectParameter("numeroOperacion", typeof(int));
    
            var idAvaluoPendienteParameter = idAvaluoPendiente.HasValue ?
                new ObjectParameter("idAvaluoPendiente", idAvaluoPendiente) :
                new ObjectParameter("idAvaluoPendiente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CobroPagosAvaluos_Result>("CobroPagosAvaluos", numeroOperacionParameter, idAvaluoPendienteParameter);
        }
    
        public virtual ObjectResult<CobroPagosDiversos_Result> CobroPagosDiversos(Nullable<int> numeroOperacion)
        {
            var numeroOperacionParameter = numeroOperacion.HasValue ?
                new ObjectParameter("numeroOperacion", numeroOperacion) :
                new ObjectParameter("numeroOperacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CobroPagosDiversos_Result>("CobroPagosDiversos", numeroOperacionParameter);
        }
    
        public virtual int CompletarAvaluos(Nullable<int> siguiente, Nullable<int> actual)
        {
            var siguienteParameter = siguiente.HasValue ?
                new ObjectParameter("Siguiente", siguiente) :
                new ObjectParameter("Siguiente", typeof(int));
    
            var actualParameter = actual.HasValue ?
                new ObjectParameter("Actual", actual) :
                new ObjectParameter("Actual", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CompletarAvaluos", siguienteParameter, actualParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos_Result> ConceptodeRecargos(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos_Result>("ConceptodeRecargos", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos01_Result> ConceptodeRecargos01(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos01_Result>("ConceptodeRecargos01", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos02_Result> ConceptodeRecargos02(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos02_Result>("ConceptodeRecargos02", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos03_Result> ConceptodeRecargos03(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos03_Result>("ConceptodeRecargos03", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos04_Result> ConceptodeRecargos04(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos04_Result>("ConceptodeRecargos04", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos05_Result> ConceptodeRecargos05(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos05_Result>("ConceptodeRecargos05", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos06_Result> ConceptodeRecargos06(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos06_Result>("ConceptodeRecargos06", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos07_Result> ConceptodeRecargos07(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos07_Result>("ConceptodeRecargos07", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos08_Result> ConceptodeRecargos08(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos08_Result>("ConceptodeRecargos08", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos09_Result> ConceptodeRecargos09(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos09_Result>("ConceptodeRecargos09", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos10_Result> ConceptodeRecargos10(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos10_Result>("ConceptodeRecargos10", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos11_Result> ConceptodeRecargos11(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos11_Result>("ConceptodeRecargos11", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos12_Result> ConceptodeRecargos12(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos12_Result>("ConceptodeRecargos12", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos13_Result> ConceptodeRecargos13(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos13_Result>("ConceptodeRecargos13", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos14_Result> ConceptodeRecargos14(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos14_Result>("ConceptodeRecargos14", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos15_Result> ConceptodeRecargos15(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos15_Result>("ConceptodeRecargos15", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos16_Result> ConceptodeRecargos16(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos16_Result>("ConceptodeRecargos16", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos17_Result> ConceptodeRecargos17(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos17_Result>("ConceptodeRecargos17", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos18_Result> ConceptodeRecargos18(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos18_Result>("ConceptodeRecargos18", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos19_Result> ConceptodeRecargos19(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos19_Result>("ConceptodeRecargos19", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos20_Result> ConceptodeRecargos20(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos20_Result>("ConceptodeRecargos20", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos21_Result> ConceptodeRecargos21(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos21_Result>("ConceptodeRecargos21", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos22_Result> ConceptodeRecargos22(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos22_Result>("ConceptodeRecargos22", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos23_Result> ConceptodeRecargos23(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos23_Result>("ConceptodeRecargos23", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos24_Result> ConceptodeRecargos24(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos24_Result>("ConceptodeRecargos24", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos25_Result> ConceptodeRecargos25(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos25_Result>("ConceptodeRecargos25", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos26_Result> ConceptodeRecargos26(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos26_Result>("ConceptodeRecargos26", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos27_Result> ConceptodeRecargos27(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos27_Result>("ConceptodeRecargos27", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos28_Result> ConceptodeRecargos28(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos28_Result>("ConceptodeRecargos28", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptodeRecargos29_Result> ConceptodeRecargos29(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptodeRecargos29_Result>("ConceptodeRecargos29", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<ConceptoMultas_Result> ConceptoMultas(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConceptoMultas_Result>("ConceptoMultas", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<CONSULTAPERSONASMORALYFISICA_Result> CONSULTAPERSONASMORALYFISICA(string clave, string zona, Nullable<int> colonia, Nullable<int> baseGrabable, Nullable<int> areaterreno)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("Zona", zona) :
                new ObjectParameter("Zona", typeof(string));
    
            var coloniaParameter = colonia.HasValue ?
                new ObjectParameter("Colonia", colonia) :
                new ObjectParameter("Colonia", typeof(int));
    
            var baseGrabableParameter = baseGrabable.HasValue ?
                new ObjectParameter("baseGrabable", baseGrabable) :
                new ObjectParameter("baseGrabable", typeof(int));
    
            var areaterrenoParameter = areaterreno.HasValue ?
                new ObjectParameter("areaterreno", areaterreno) :
                new ObjectParameter("areaterreno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CONSULTAPERSONASMORALYFISICA_Result>("CONSULTAPERSONASMORALYFISICA", claveParameter, zonaParameter, coloniaParameter, baseGrabableParameter, areaterrenoParameter);
        }
    
        public virtual ObjectResult<Fecha1_Result> Fecha1(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Fecha1_Result>("Fecha1", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<fecha2_Result> fecha2(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fecha2_Result>("fecha2", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<fecha3_Result> fecha3(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fecha3_Result>("fecha3", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<fecha4_Result> fecha4(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fecha4_Result>("fecha4", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<fecha5_Result> fecha5(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fecha5_Result>("fecha5", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<fecha6_Result> fecha6(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fecha6_Result>("fecha6", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<FechaActual_Result> FechaActual()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FechaActual_Result>("FechaActual");
        }
    
        public virtual ObjectResult<Fiscalreporte_Result> Fiscalreporte(string numerocta)
        {
            var numeroctaParameter = numerocta != null ?
                new ObjectParameter("Numerocta", numerocta) :
                new ObjectParameter("Numerocta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Fiscalreporte_Result>("Fiscalreporte", numeroctaParameter);
        }
    
        public virtual ObjectResult<fiscalreporte1prueba_Result> fiscalreporte1prueba(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<fiscalreporte1prueba_Result>("fiscalreporte1prueba", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<GetDatosGenerales_Result> GetDatosGenerales(string folios)
        {
            var foliosParameter = folios != null ?
                new ObjectParameter("Folios", folios) :
                new ObjectParameter("Folios", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDatosGenerales_Result>("GetDatosGenerales", foliosParameter);
        }
    
        public virtual ObjectResult<GetDatosGenerales2_Result> GetDatosGenerales2(string folios)
        {
            var foliosParameter = folios != null ?
                new ObjectParameter("Folios", folios) :
                new ObjectParameter("Folios", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDatosGenerales2_Result>("GetDatosGenerales2", foliosParameter);
        }
    
        public virtual ObjectResult<string> GetDatosGeneralesPropietario(string folios)
        {
            var foliosParameter = folios != null ?
                new ObjectParameter("Folios", folios) :
                new ObjectParameter("Folios", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetDatosGeneralesPropietario", foliosParameter);
        }
    
        public virtual ObjectResult<GetDescuentos_Result> GetDescuentos(string folios)
        {
            var foliosParameter = folios != null ?
                new ObjectParameter("Folios", folios) :
                new ObjectParameter("Folios", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDescuentos_Result>("GetDescuentos", foliosParameter);
        }
    
        public virtual ObjectResult<GetPagos_Result> GetPagos(string folios)
        {
            var foliosParameter = folios != null ?
                new ObjectParameter("Folios", folios) :
                new ObjectParameter("Folios", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPagos_Result>("GetPagos", foliosParameter);
        }
    
        public virtual int InsercionSisAvaluosEjecucion(string clave, string cuenta, Nullable<int> region, Nullable<int> manzana, Nullable<int> predio, Nullable<int> condominio, Nullable<int> año, Nullable<decimal> baseGravable, Nullable<decimal> areaTerreno, Nullable<int> municipio, Nullable<int> edificio, string tipoOperacion, string descripcionOperacion, string claveOrigen, string numeroDeCuentaOrigen, string claveCatastralOrigen, Nullable<int> estatus)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var cuentaParameter = cuenta != null ?
                new ObjectParameter("cuenta", cuenta) :
                new ObjectParameter("cuenta", typeof(string));
    
            var regionParameter = region.HasValue ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(int));
    
            var manzanaParameter = manzana.HasValue ?
                new ObjectParameter("Manzana", manzana) :
                new ObjectParameter("Manzana", typeof(int));
    
            var predioParameter = predio.HasValue ?
                new ObjectParameter("Predio", predio) :
                new ObjectParameter("Predio", typeof(int));
    
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("Condominio", condominio) :
                new ObjectParameter("Condominio", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("Año", año) :
                new ObjectParameter("Año", typeof(int));
    
            var baseGravableParameter = baseGravable.HasValue ?
                new ObjectParameter("BaseGravable", baseGravable) :
                new ObjectParameter("BaseGravable", typeof(decimal));
    
            var areaTerrenoParameter = areaTerreno.HasValue ?
                new ObjectParameter("AreaTerreno", areaTerreno) :
                new ObjectParameter("AreaTerreno", typeof(decimal));
    
            var municipioParameter = municipio.HasValue ?
                new ObjectParameter("Municipio", municipio) :
                new ObjectParameter("Municipio", typeof(int));
    
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("Edificio", edificio) :
                new ObjectParameter("Edificio", typeof(int));
    
            var tipoOperacionParameter = tipoOperacion != null ?
                new ObjectParameter("TipoOperacion", tipoOperacion) :
                new ObjectParameter("TipoOperacion", typeof(string));
    
            var descripcionOperacionParameter = descripcionOperacion != null ?
                new ObjectParameter("DescripcionOperacion", descripcionOperacion) :
                new ObjectParameter("DescripcionOperacion", typeof(string));
    
            var claveOrigenParameter = claveOrigen != null ?
                new ObjectParameter("ClaveOrigen", claveOrigen) :
                new ObjectParameter("ClaveOrigen", typeof(string));
    
            var numeroDeCuentaOrigenParameter = numeroDeCuentaOrigen != null ?
                new ObjectParameter("NumeroDeCuentaOrigen", numeroDeCuentaOrigen) :
                new ObjectParameter("NumeroDeCuentaOrigen", typeof(string));
    
            var claveCatastralOrigenParameter = claveCatastralOrigen != null ?
                new ObjectParameter("ClaveCatastralOrigen", claveCatastralOrigen) :
                new ObjectParameter("ClaveCatastralOrigen", typeof(string));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsercionSisAvaluosEjecucion", claveParameter, cuentaParameter, regionParameter, manzanaParameter, predioParameter, condominioParameter, añoParameter, baseGravableParameter, areaTerrenoParameter, municipioParameter, edificioParameter, tipoOperacionParameter, descripcionOperacionParameter, claveOrigenParameter, numeroDeCuentaOrigenParameter, claveCatastralOrigenParameter, estatusParameter);
        }
    
        public virtual int InsercionSisDetallesDeTerrenoEjecucion(string clave, string cuenta, Nullable<int> region, Nullable<int> manzana, Nullable<int> predio, Nullable<int> condominio, Nullable<int> año, Nullable<decimal> areaConstruccion, string usoDeSuelo, Nullable<int> idTipoDeConstruccion, Nullable<int> municipio, Nullable<int> edificio, string tipoOperacion, string descripcionOperacion, string claveOrigen, string numeroDeCuentaOrigen, string claveCatastralOrigen, Nullable<int> estatus)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var cuentaParameter = cuenta != null ?
                new ObjectParameter("cuenta", cuenta) :
                new ObjectParameter("cuenta", typeof(string));
    
            var regionParameter = region.HasValue ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(int));
    
            var manzanaParameter = manzana.HasValue ?
                new ObjectParameter("Manzana", manzana) :
                new ObjectParameter("Manzana", typeof(int));
    
            var predioParameter = predio.HasValue ?
                new ObjectParameter("Predio", predio) :
                new ObjectParameter("Predio", typeof(int));
    
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("Condominio", condominio) :
                new ObjectParameter("Condominio", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("Año", año) :
                new ObjectParameter("Año", typeof(int));
    
            var areaConstruccionParameter = areaConstruccion.HasValue ?
                new ObjectParameter("AreaConstruccion", areaConstruccion) :
                new ObjectParameter("AreaConstruccion", typeof(decimal));
    
            var usoDeSueloParameter = usoDeSuelo != null ?
                new ObjectParameter("UsoDeSuelo", usoDeSuelo) :
                new ObjectParameter("UsoDeSuelo", typeof(string));
    
            var idTipoDeConstruccionParameter = idTipoDeConstruccion.HasValue ?
                new ObjectParameter("IdTipoDeConstruccion", idTipoDeConstruccion) :
                new ObjectParameter("IdTipoDeConstruccion", typeof(int));
    
            var municipioParameter = municipio.HasValue ?
                new ObjectParameter("Municipio", municipio) :
                new ObjectParameter("Municipio", typeof(int));
    
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("Edificio", edificio) :
                new ObjectParameter("Edificio", typeof(int));
    
            var tipoOperacionParameter = tipoOperacion != null ?
                new ObjectParameter("TipoOperacion", tipoOperacion) :
                new ObjectParameter("TipoOperacion", typeof(string));
    
            var descripcionOperacionParameter = descripcionOperacion != null ?
                new ObjectParameter("DescripcionOperacion", descripcionOperacion) :
                new ObjectParameter("DescripcionOperacion", typeof(string));
    
            var claveOrigenParameter = claveOrigen != null ?
                new ObjectParameter("ClaveOrigen", claveOrigen) :
                new ObjectParameter("ClaveOrigen", typeof(string));
    
            var numeroDeCuentaOrigenParameter = numeroDeCuentaOrigen != null ?
                new ObjectParameter("NumeroDeCuentaOrigen", numeroDeCuentaOrigen) :
                new ObjectParameter("NumeroDeCuentaOrigen", typeof(string));
    
            var claveCatastralOrigenParameter = claveCatastralOrigen != null ?
                new ObjectParameter("ClaveCatastralOrigen", claveCatastralOrigen) :
                new ObjectParameter("ClaveCatastralOrigen", typeof(string));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsercionSisDetallesDeTerrenoEjecucion", claveParameter, cuentaParameter, regionParameter, manzanaParameter, predioParameter, condominioParameter, añoParameter, areaConstruccionParameter, usoDeSueloParameter, idTipoDeConstruccionParameter, municipioParameter, edificioParameter, tipoOperacionParameter, descripcionOperacionParameter, claveOrigenParameter, numeroDeCuentaOrigenParameter, claveCatastralOrigenParameter, estatusParameter);
        }
    
        public virtual int InsercionSisPredialEjecucion(string clave, string cuenta, Nullable<int> año, Nullable<int> region, Nullable<int> manzana, Nullable<int> predio, Nullable<int> condominio, Nullable<int> idColoniaDePredio, Nullable<System.DateTime> fechaAlta, string nombreCalle, string numeroExterior, string numeroInterior, Nullable<int> codigoPostal, string claveCatastral, Nullable<int> municipio, Nullable<int> edificio, string ubicacion, Nullable<int> idTipoDeVialidad, string tipoOperacion, string descripcionOperacion, string claveOrigen, string numeroDeCuentaOrigen, string claveCatastralOrigen, Nullable<int> estatus, string numeroDeTramite)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var cuentaParameter = cuenta != null ?
                new ObjectParameter("cuenta", cuenta) :
                new ObjectParameter("cuenta", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var regionParameter = region.HasValue ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(int));
    
            var manzanaParameter = manzana.HasValue ?
                new ObjectParameter("Manzana", manzana) :
                new ObjectParameter("Manzana", typeof(int));
    
            var predioParameter = predio.HasValue ?
                new ObjectParameter("Predio", predio) :
                new ObjectParameter("Predio", typeof(int));
    
            var condominioParameter = condominio.HasValue ?
                new ObjectParameter("Condominio", condominio) :
                new ObjectParameter("Condominio", typeof(int));
    
            var idColoniaDePredioParameter = idColoniaDePredio.HasValue ?
                new ObjectParameter("IdColoniaDePredio", idColoniaDePredio) :
                new ObjectParameter("IdColoniaDePredio", typeof(int));
    
            var fechaAltaParameter = fechaAlta.HasValue ?
                new ObjectParameter("FechaAlta", fechaAlta) :
                new ObjectParameter("FechaAlta", typeof(System.DateTime));
    
            var nombreCalleParameter = nombreCalle != null ?
                new ObjectParameter("NombreCalle", nombreCalle) :
                new ObjectParameter("NombreCalle", typeof(string));
    
            var numeroExteriorParameter = numeroExterior != null ?
                new ObjectParameter("NumeroExterior", numeroExterior) :
                new ObjectParameter("NumeroExterior", typeof(string));
    
            var numeroInteriorParameter = numeroInterior != null ?
                new ObjectParameter("NumeroInterior", numeroInterior) :
                new ObjectParameter("NumeroInterior", typeof(string));
    
            var codigoPostalParameter = codigoPostal.HasValue ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(int));
    
            var claveCatastralParameter = claveCatastral != null ?
                new ObjectParameter("ClaveCatastral", claveCatastral) :
                new ObjectParameter("ClaveCatastral", typeof(string));
    
            var municipioParameter = municipio.HasValue ?
                new ObjectParameter("Municipio", municipio) :
                new ObjectParameter("Municipio", typeof(int));
    
            var edificioParameter = edificio.HasValue ?
                new ObjectParameter("Edificio", edificio) :
                new ObjectParameter("Edificio", typeof(int));
    
            var ubicacionParameter = ubicacion != null ?
                new ObjectParameter("Ubicacion", ubicacion) :
                new ObjectParameter("Ubicacion", typeof(string));
    
            var idTipoDeVialidadParameter = idTipoDeVialidad.HasValue ?
                new ObjectParameter("IdTipoDeVialidad", idTipoDeVialidad) :
                new ObjectParameter("IdTipoDeVialidad", typeof(int));
    
            var tipoOperacionParameter = tipoOperacion != null ?
                new ObjectParameter("TipoOperacion", tipoOperacion) :
                new ObjectParameter("TipoOperacion", typeof(string));
    
            var descripcionOperacionParameter = descripcionOperacion != null ?
                new ObjectParameter("DescripcionOperacion", descripcionOperacion) :
                new ObjectParameter("DescripcionOperacion", typeof(string));
    
            var claveOrigenParameter = claveOrigen != null ?
                new ObjectParameter("ClaveOrigen", claveOrigen) :
                new ObjectParameter("ClaveOrigen", typeof(string));
    
            var numeroDeCuentaOrigenParameter = numeroDeCuentaOrigen != null ?
                new ObjectParameter("NumeroDeCuentaOrigen", numeroDeCuentaOrigen) :
                new ObjectParameter("NumeroDeCuentaOrigen", typeof(string));
    
            var claveCatastralOrigenParameter = claveCatastralOrigen != null ?
                new ObjectParameter("ClaveCatastralOrigen", claveCatastralOrigen) :
                new ObjectParameter("ClaveCatastralOrigen", typeof(string));
    
            var estatusParameter = estatus.HasValue ?
                new ObjectParameter("Estatus", estatus) :
                new ObjectParameter("Estatus", typeof(int));
    
            var numeroDeTramiteParameter = numeroDeTramite != null ?
                new ObjectParameter("NumeroDeTramite", numeroDeTramite) :
                new ObjectParameter("NumeroDeTramite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsercionSisPredialEjecucion", claveParameter, cuentaParameter, añoParameter, regionParameter, manzanaParameter, predioParameter, condominioParameter, idColoniaDePredioParameter, fechaAltaParameter, nombreCalleParameter, numeroExteriorParameter, numeroInteriorParameter, codigoPostalParameter, claveCatastralParameter, municipioParameter, edificioParameter, ubicacionParameter, idTipoDeVialidadParameter, tipoOperacionParameter, descripcionOperacionParameter, claveOrigenParameter, numeroDeCuentaOrigenParameter, claveCatastralOrigenParameter, estatusParameter, numeroDeTramiteParameter);
        }
    
        public virtual ObjectResult<MesActual_Result> MesActual(string numerocta)
        {
            var numeroctaParameter = numerocta != null ?
                new ObjectParameter("Numerocta", numerocta) :
                new ObjectParameter("Numerocta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MesActual_Result>("MesActual", numeroctaParameter);
        }
    
        public virtual ObjectResult<string> Nombrebimestrefilas(string numerocta, string clavecta)
        {
            var numeroctaParameter = numerocta != null ?
                new ObjectParameter("Numerocta", numerocta) :
                new ObjectParameter("Numerocta", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Nombrebimestrefilas", numeroctaParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<NombreFirmaDirector_Result> NombreFirmaDirector()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NombreFirmaDirector_Result>("NombreFirmaDirector");
        }
    
        public virtual int NuevoAdeudo(Nullable<int> anoS)
        {
            var anoSParameter = anoS.HasValue ?
                new ObjectParameter("anoS", anoS) :
                new ObjectParameter("anoS", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NuevoAdeudo", anoSParameter);
        }
    
        public virtual ObjectResult<Recargosconcepto_Result> Recargosconcepto(string numeroCTA, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Recargosconcepto_Result>("Recargosconcepto", numeroCTAParameter, clavectaParameter);
        }
    
        public virtual int ReiniciarDatos(Nullable<int> year, Nullable<int> opcion)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var opcionParameter = opcion.HasValue ?
                new ObjectParameter("opcion", opcion) :
                new ObjectParameter("opcion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReiniciarDatos", yearParameter, opcionParameter);
        }
    
        public virtual ObjectResult<ReporteCedulaCatastral_Result> ReporteCedulaCatastral(string tramite, Nullable<int> año)
        {
            var tramiteParameter = tramite != null ?
                new ObjectParameter("tramite", tramite) :
                new ObjectParameter("tramite", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteCedulaCatastral_Result>("ReporteCedulaCatastral", tramiteParameter, añoParameter);
        }
    
        public virtual ObjectResult<ReporteCertificado_Result> ReporteCertificado(string tramite)
        {
            var tramiteParameter = tramite != null ?
                new ObjectParameter("tramite", tramite) :
                new ObjectParameter("tramite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteCertificado_Result>("ReporteCertificado", tramiteParameter);
        }
    
        public virtual ObjectResult<ReporteConstancia_Result> ReporteConstancia(string tramite)
        {
            var tramiteParameter = tramite != null ?
                new ObjectParameter("tramite", tramite) :
                new ObjectParameter("tramite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteConstancia_Result>("ReporteConstancia", tramiteParameter);
        }
    
        public virtual ObjectResult<ReportePadron_Result> ReportePadron(string tramite)
        {
            var tramiteParameter = tramite != null ?
                new ObjectParameter("tramite", tramite) :
                new ObjectParameter("tramite", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportePadron_Result>("ReportePadron", tramiteParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_CertificadoValorCatastralFiscal_Result> sp_CertificadoValorCatastralFiscal(Nullable<int> numeroTramite)
        {
            var numeroTramiteParameter = numeroTramite.HasValue ?
                new ObjectParameter("numeroTramite", numeroTramite) :
                new ObjectParameter("numeroTramite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CertificadoValorCatastralFiscal_Result>("sp_CertificadoValorCatastralFiscal", numeroTramiteParameter);
        }
    
        public virtual ObjectResult<sp_ConsultaCedulaDatosCatastrales_Result> sp_ConsultaCedulaDatosCatastrales(Nullable<int> numeroTramite)
        {
            var numeroTramiteParameter = numeroTramite.HasValue ?
                new ObjectParameter("numeroTramite", numeroTramite) :
                new ObjectParameter("numeroTramite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultaCedulaDatosCatastrales_Result>("sp_ConsultaCedulaDatosCatastrales", numeroTramiteParameter);
        }
    
        public virtual ObjectResult<sp_ConsultaCedulaDatosPropiedad_Result> sp_ConsultaCedulaDatosPropiedad(Nullable<int> numeroTramite)
        {
            var numeroTramiteParameter = numeroTramite.HasValue ?
                new ObjectParameter("numeroTramite", numeroTramite) :
                new ObjectParameter("numeroTramite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultaCedulaDatosPropiedad_Result>("sp_ConsultaCedulaDatosPropiedad", numeroTramiteParameter);
        }
    
        public virtual ObjectResult<sp_ConsultaCedulaTasaAnual_Result> sp_ConsultaCedulaTasaAnual(Nullable<int> numeroTramite)
        {
            var numeroTramiteParameter = numeroTramite.HasValue ?
                new ObjectParameter("numeroTramite", numeroTramite) :
                new ObjectParameter("numeroTramite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultaCedulaTasaAnual_Result>("sp_ConsultaCedulaTasaAnual", numeroTramiteParameter);
        }
    
        public virtual ObjectResult<sp_ConsultaConstanciaImpuestoPredial_Result> sp_ConsultaConstanciaImpuestoPredial(Nullable<int> numeroTramite)
        {
            var numeroTramiteParameter = numeroTramite.HasValue ?
                new ObjectParameter("numeroTramite", numeroTramite) :
                new ObjectParameter("numeroTramite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultaConstanciaImpuestoPredial_Result>("sp_ConsultaConstanciaImpuestoPredial", numeroTramiteParameter);
        }
    
        public virtual ObjectResult<sp_ConsultaPadronImpuestoPredial_Result> sp_ConsultaPadronImpuestoPredial(Nullable<int> numeroTramite)
        {
            var numeroTramiteParameter = numeroTramite.HasValue ?
                new ObjectParameter("numeroTramite", numeroTramite) :
                new ObjectParameter("numeroTramite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ConsultaPadronImpuestoPredial_Result>("sp_ConsultaPadronImpuestoPredial", numeroTramiteParameter);
        }
    
        public virtual ObjectResult<SP_ConsultaReportesPredial_Result> SP_ConsultaReportesPredial(Nullable<int> tipoConsulta, string clave, string zona, Nullable<int> colonia, Nullable<System.DateTime> anioInicial, Nullable<System.DateTime> anioFinal)
        {
            var tipoConsultaParameter = tipoConsulta.HasValue ?
                new ObjectParameter("TipoConsulta", tipoConsulta) :
                new ObjectParameter("TipoConsulta", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("Zona", zona) :
                new ObjectParameter("Zona", typeof(string));
    
            var coloniaParameter = colonia.HasValue ?
                new ObjectParameter("Colonia", colonia) :
                new ObjectParameter("Colonia", typeof(int));
    
            var anioInicialParameter = anioInicial.HasValue ?
                new ObjectParameter("AnioInicial", anioInicial) :
                new ObjectParameter("AnioInicial", typeof(System.DateTime));
    
            var anioFinalParameter = anioFinal.HasValue ?
                new ObjectParameter("AnioFinal", anioFinal) :
                new ObjectParameter("AnioFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultaReportesPredial_Result>("SP_ConsultaReportesPredial", tipoConsultaParameter, claveParameter, zonaParameter, coloniaParameter, anioInicialParameter, anioFinalParameter);
        }
    
        public virtual ObjectResult<SP_ConsultaReportesPredial2_Result> SP_ConsultaReportesPredial2(string numeroDeCuenta, string nombreprop, string apPaterno, string apMaterno, Nullable<int> tipoConsulta, string clave, string zona, Nullable<int> colonia, Nullable<System.DateTime> anioInicial, Nullable<System.DateTime> anioFinal)
        {
            var numeroDeCuentaParameter = numeroDeCuenta != null ?
                new ObjectParameter("NumeroDeCuenta", numeroDeCuenta) :
                new ObjectParameter("NumeroDeCuenta", typeof(string));
    
            var nombrepropParameter = nombreprop != null ?
                new ObjectParameter("Nombreprop", nombreprop) :
                new ObjectParameter("Nombreprop", typeof(string));
    
            var apPaternoParameter = apPaterno != null ?
                new ObjectParameter("ApPaterno", apPaterno) :
                new ObjectParameter("ApPaterno", typeof(string));
    
            var apMaternoParameter = apMaterno != null ?
                new ObjectParameter("ApMaterno", apMaterno) :
                new ObjectParameter("ApMaterno", typeof(string));
    
            var tipoConsultaParameter = tipoConsulta.HasValue ?
                new ObjectParameter("TipoConsulta", tipoConsulta) :
                new ObjectParameter("TipoConsulta", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("Zona", zona) :
                new ObjectParameter("Zona", typeof(string));
    
            var coloniaParameter = colonia.HasValue ?
                new ObjectParameter("Colonia", colonia) :
                new ObjectParameter("Colonia", typeof(int));
    
            var anioInicialParameter = anioInicial.HasValue ?
                new ObjectParameter("AnioInicial", anioInicial) :
                new ObjectParameter("AnioInicial", typeof(System.DateTime));
    
            var anioFinalParameter = anioFinal.HasValue ?
                new ObjectParameter("AnioFinal", anioFinal) :
                new ObjectParameter("AnioFinal", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultaReportesPredial2_Result>("SP_ConsultaReportesPredial2", numeroDeCuentaParameter, nombrepropParameter, apPaternoParameter, apMaternoParameter, tipoConsultaParameter, claveParameter, zonaParameter, coloniaParameter, anioInicialParameter, anioFinalParameter);
        }
    
        public virtual ObjectResult<SP_ConsultaReportesPredialNuevo_Result> SP_ConsultaReportesPredialNuevo(Nullable<int> tipoConsulta, Nullable<System.DateTime> anioInicial, Nullable<System.DateTime> anioFinal, Nullable<int> ejercicioInicio, Nullable<int> ejercicioFinal)
        {
            var tipoConsultaParameter = tipoConsulta.HasValue ?
                new ObjectParameter("TipoConsulta", tipoConsulta) :
                new ObjectParameter("TipoConsulta", typeof(int));
    
            var anioInicialParameter = anioInicial.HasValue ?
                new ObjectParameter("AnioInicial", anioInicial) :
                new ObjectParameter("AnioInicial", typeof(System.DateTime));
    
            var anioFinalParameter = anioFinal.HasValue ?
                new ObjectParameter("AnioFinal", anioFinal) :
                new ObjectParameter("AnioFinal", typeof(System.DateTime));
    
            var ejercicioInicioParameter = ejercicioInicio.HasValue ?
                new ObjectParameter("ejercicioInicio", ejercicioInicio) :
                new ObjectParameter("ejercicioInicio", typeof(int));
    
            var ejercicioFinalParameter = ejercicioFinal.HasValue ?
                new ObjectParameter("ejercicioFinal", ejercicioFinal) :
                new ObjectParameter("ejercicioFinal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultaReportesPredialNuevo_Result>("SP_ConsultaReportesPredialNuevo", tipoConsultaParameter, anioInicialParameter, anioFinalParameter, ejercicioInicioParameter, ejercicioFinalParameter);
        }
    
        public virtual ObjectResult<SP_ConsultaReportesPredialPagos_Result> SP_ConsultaReportesPredialPagos(Nullable<int> tipoConsulta, string clave, string zona, Nullable<int> colonia, Nullable<System.DateTime> anioInicial, Nullable<System.DateTime> anioFinal, string ejerciciopago)
        {
            var tipoConsultaParameter = tipoConsulta.HasValue ?
                new ObjectParameter("TipoConsulta", tipoConsulta) :
                new ObjectParameter("TipoConsulta", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var zonaParameter = zona != null ?
                new ObjectParameter("Zona", zona) :
                new ObjectParameter("Zona", typeof(string));
    
            var coloniaParameter = colonia.HasValue ?
                new ObjectParameter("Colonia", colonia) :
                new ObjectParameter("Colonia", typeof(int));
    
            var anioInicialParameter = anioInicial.HasValue ?
                new ObjectParameter("AnioInicial", anioInicial) :
                new ObjectParameter("AnioInicial", typeof(System.DateTime));
    
            var anioFinalParameter = anioFinal.HasValue ?
                new ObjectParameter("AnioFinal", anioFinal) :
                new ObjectParameter("AnioFinal", typeof(System.DateTime));
    
            var ejerciciopagoParameter = ejerciciopago != null ?
                new ObjectParameter("ejerciciopago", ejerciciopago) :
                new ObjectParameter("ejerciciopago", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ConsultaReportesPredialPagos_Result>("SP_ConsultaReportesPredialPagos", tipoConsultaParameter, claveParameter, zonaParameter, coloniaParameter, anioInicialParameter, anioFinalParameter, ejerciciopagoParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_InsertAsentamientoPredial(Nullable<int> idTipoColonia, string claveColonia, string nombre, string codigoPostal, string nombreLocalidad, string idLocalidad)
        {
            var idTipoColoniaParameter = idTipoColonia.HasValue ?
                new ObjectParameter("IdTipoColonia", idTipoColonia) :
                new ObjectParameter("IdTipoColonia", typeof(int));
    
            var claveColoniaParameter = claveColonia != null ?
                new ObjectParameter("ClaveColonia", claveColonia) :
                new ObjectParameter("ClaveColonia", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var nombreLocalidadParameter = nombreLocalidad != null ?
                new ObjectParameter("NombreLocalidad", nombreLocalidad) :
                new ObjectParameter("NombreLocalidad", typeof(string));
    
            var idLocalidadParameter = idLocalidad != null ?
                new ObjectParameter("IdLocalidad", idLocalidad) :
                new ObjectParameter("IdLocalidad", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertAsentamientoPredial", idTipoColoniaParameter, claveColoniaParameter, nombreParameter, codigoPostalParameter, nombreLocalidadParameter, idLocalidadParameter);
        }
    
        public virtual ObjectResult<sp_NotariaDependencia_Result> sp_NotariaDependencia(Nullable<int> numeroTramite)
        {
            var numeroTramiteParameter = numeroTramite.HasValue ?
                new ObjectParameter("numeroTramite", numeroTramite) :
                new ObjectParameter("numeroTramite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_NotariaDependencia_Result>("sp_NotariaDependencia", numeroTramiteParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_UpdateSisAsentamientosPredial(Nullable<int> idTipoColonia, Nullable<int> claveColonia, string nombre, string codigoPostal, string cVELOC)
        {
            var idTipoColoniaParameter = idTipoColonia.HasValue ?
                new ObjectParameter("IdTipoColonia", idTipoColonia) :
                new ObjectParameter("IdTipoColonia", typeof(int));
    
            var claveColoniaParameter = claveColonia.HasValue ?
                new ObjectParameter("ClaveColonia", claveColonia) :
                new ObjectParameter("ClaveColonia", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var codigoPostalParameter = codigoPostal != null ?
                new ObjectParameter("CodigoPostal", codigoPostal) :
                new ObjectParameter("CodigoPostal", typeof(string));
    
            var cVELOCParameter = cVELOC != null ?
                new ObjectParameter("CVELOC", cVELOC) :
                new ObjectParameter("CVELOC", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateSisAsentamientosPredial", idTipoColoniaParameter, claveColoniaParameter, nombreParameter, codigoPostalParameter, cVELOCParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<TasaAnualCedulaCatastral_Result> TasaAnualCedulaCatastral(string clave, Nullable<decimal> construccion, Nullable<int> año)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var construccionParameter = construccion.HasValue ?
                new ObjectParameter("construccion", construccion) :
                new ObjectParameter("construccion", typeof(decimal));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TasaAnualCedulaCatastral_Result>("TasaAnualCedulaCatastral", claveParameter, construccionParameter, añoParameter);
        }
    
        public virtual ObjectResult<tiposdepredios_Result> tiposdepredios(string numeroCTA, Nullable<int> tipoDePedioss, string clavecta)
        {
            var numeroCTAParameter = numeroCTA != null ?
                new ObjectParameter("NumeroCTA", numeroCTA) :
                new ObjectParameter("NumeroCTA", typeof(string));
    
            var tipoDePediossParameter = tipoDePedioss.HasValue ?
                new ObjectParameter("TipoDePedioss", tipoDePedioss) :
                new ObjectParameter("TipoDePedioss", typeof(int));
    
            var clavectaParameter = clavecta != null ?
                new ObjectParameter("clavecta", clavecta) :
                new ObjectParameter("clavecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<tiposdepredios_Result>("tiposdepredios", numeroCTAParameter, tipoDePediossParameter, clavectaParameter);
        }
    
        public virtual ObjectResult<uspAcomodaPagosYAdeudosPorRango_Result> uspAcomodaPagosYAdeudosPorRango(Nullable<int> intInicio, Nullable<int> intFin)
        {
            var intInicioParameter = intInicio.HasValue ?
                new ObjectParameter("intInicio", intInicio) :
                new ObjectParameter("intInicio", typeof(int));
    
            var intFinParameter = intFin.HasValue ?
                new ObjectParameter("intFin", intFin) :
                new ObjectParameter("intFin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspAcomodaPagosYAdeudosPorRango_Result>("uspAcomodaPagosYAdeudosPorRango", intInicioParameter, intFinParameter);
        }
    
        public virtual int uspAplicarRecargoBimestral(Nullable<decimal> porcentaje, Nullable<int> año)
        {
            var porcentajeParameter = porcentaje.HasValue ?
                new ObjectParameter("porcentaje", porcentaje) :
                new ObjectParameter("porcentaje", typeof(decimal));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAplicarRecargoBimestral", porcentajeParameter, añoParameter);
        }
    
        public virtual int uspCalculoDeParametrosCategoria1(Nullable<decimal> porcentajeImpuesto, Nullable<decimal> tasaAnual, Nullable<int> año, Nullable<decimal> pagoMinimo)
        {
            var porcentajeImpuestoParameter = porcentajeImpuesto.HasValue ?
                new ObjectParameter("porcentajeImpuesto", porcentajeImpuesto) :
                new ObjectParameter("porcentajeImpuesto", typeof(decimal));
    
            var tasaAnualParameter = tasaAnual.HasValue ?
                new ObjectParameter("tasaAnual", tasaAnual) :
                new ObjectParameter("tasaAnual", typeof(decimal));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var pagoMinimoParameter = pagoMinimo.HasValue ?
                new ObjectParameter("pagoMinimo", pagoMinimo) :
                new ObjectParameter("pagoMinimo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculoDeParametrosCategoria1", porcentajeImpuestoParameter, tasaAnualParameter, añoParameter, pagoMinimoParameter);
        }
    
        public virtual int uspCalculoDeParametrosCategoria2(Nullable<decimal> porcentajeImpuesto, Nullable<decimal> tasaAnual, Nullable<int> año, Nullable<decimal> pagoMinimo)
        {
            var porcentajeImpuestoParameter = porcentajeImpuesto.HasValue ?
                new ObjectParameter("porcentajeImpuesto", porcentajeImpuesto) :
                new ObjectParameter("porcentajeImpuesto", typeof(decimal));
    
            var tasaAnualParameter = tasaAnual.HasValue ?
                new ObjectParameter("tasaAnual", tasaAnual) :
                new ObjectParameter("tasaAnual", typeof(decimal));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var pagoMinimoParameter = pagoMinimo.HasValue ?
                new ObjectParameter("pagoMinimo", pagoMinimo) :
                new ObjectParameter("pagoMinimo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculoDeParametrosCategoria2", porcentajeImpuestoParameter, tasaAnualParameter, añoParameter, pagoMinimoParameter);
        }
    
        public virtual int uspCalculoDeParametrosCategoria3(Nullable<decimal> porcentajeImpuesto, Nullable<decimal> tasaAnual, Nullable<int> año, Nullable<decimal> pagoMinimo)
        {
            var porcentajeImpuestoParameter = porcentajeImpuesto.HasValue ?
                new ObjectParameter("porcentajeImpuesto", porcentajeImpuesto) :
                new ObjectParameter("porcentajeImpuesto", typeof(decimal));
    
            var tasaAnualParameter = tasaAnual.HasValue ?
                new ObjectParameter("tasaAnual", tasaAnual) :
                new ObjectParameter("tasaAnual", typeof(decimal));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var pagoMinimoParameter = pagoMinimo.HasValue ?
                new ObjectParameter("pagoMinimo", pagoMinimo) :
                new ObjectParameter("pagoMinimo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculoDeParametrosCategoria3", porcentajeImpuestoParameter, tasaAnualParameter, añoParameter, pagoMinimoParameter);
        }
    
        public virtual int uspCalculoDeParametrosCategoria4(Nullable<decimal> porcentajeImpuesto, Nullable<decimal> tasaAnual, Nullable<int> año, Nullable<decimal> pagoMinimo)
        {
            var porcentajeImpuestoParameter = porcentajeImpuesto.HasValue ?
                new ObjectParameter("porcentajeImpuesto", porcentajeImpuesto) :
                new ObjectParameter("porcentajeImpuesto", typeof(decimal));
    
            var tasaAnualParameter = tasaAnual.HasValue ?
                new ObjectParameter("tasaAnual", tasaAnual) :
                new ObjectParameter("tasaAnual", typeof(decimal));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var pagoMinimoParameter = pagoMinimo.HasValue ?
                new ObjectParameter("pagoMinimo", pagoMinimo) :
                new ObjectParameter("pagoMinimo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculoDeParametrosCategoria4", porcentajeImpuestoParameter, tasaAnualParameter, añoParameter, pagoMinimoParameter);
        }
    
        public virtual int uspCalculoDeParametrosCategoria6(Nullable<decimal> porcentajeImpuesto, Nullable<decimal> tasaAnual, Nullable<int> año, Nullable<decimal> pagoMinimo)
        {
            var porcentajeImpuestoParameter = porcentajeImpuesto.HasValue ?
                new ObjectParameter("porcentajeImpuesto", porcentajeImpuesto) :
                new ObjectParameter("porcentajeImpuesto", typeof(decimal));
    
            var tasaAnualParameter = tasaAnual.HasValue ?
                new ObjectParameter("tasaAnual", tasaAnual) :
                new ObjectParameter("tasaAnual", typeof(decimal));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var pagoMinimoParameter = pagoMinimo.HasValue ?
                new ObjectParameter("pagoMinimo", pagoMinimo) :
                new ObjectParameter("pagoMinimo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculoDeParametrosCategoria6", porcentajeImpuestoParameter, tasaAnualParameter, añoParameter, pagoMinimoParameter);
        }
    
        public virtual int uspCalculoDeParametrosCategoria7(Nullable<decimal> porcentajeImpuesto, Nullable<decimal> tasaAnual, Nullable<int> año, Nullable<decimal> pagoMinimo)
        {
            var porcentajeImpuestoParameter = porcentajeImpuesto.HasValue ?
                new ObjectParameter("porcentajeImpuesto", porcentajeImpuesto) :
                new ObjectParameter("porcentajeImpuesto", typeof(decimal));
    
            var tasaAnualParameter = tasaAnual.HasValue ?
                new ObjectParameter("tasaAnual", tasaAnual) :
                new ObjectParameter("tasaAnual", typeof(decimal));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var pagoMinimoParameter = pagoMinimo.HasValue ?
                new ObjectParameter("pagoMinimo", pagoMinimo) :
                new ObjectParameter("pagoMinimo", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCalculoDeParametrosCategoria7", porcentajeImpuestoParameter, tasaAnualParameter, añoParameter, pagoMinimoParameter);
        }
    
        public virtual ObjectResult<UspEjecutaAcomodaPagosYAdeudosPorRango_Result> UspEjecutaAcomodaPagosYAdeudosPorRango()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UspEjecutaAcomodaPagosYAdeudosPorRango_Result>("UspEjecutaAcomodaPagosYAdeudosPorRango");
        }
    
        public virtual ObjectResult<uspObtenerClavesOcupadas_Result> uspObtenerClavesOcupadas(string tipoClave)
        {
            var tipoClaveParameter = tipoClave != null ?
                new ObjectParameter("tipoClave", tipoClave) :
                new ObjectParameter("tipoClave", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspObtenerClavesOcupadas_Result>("uspObtenerClavesOcupadas", tipoClaveParameter);
        }
    
        public virtual ObjectResult<uspObtenerColoniasAdeudo_Result> uspObtenerColoniasAdeudo(Nullable<int> año)
        {
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspObtenerColoniasAdeudo_Result>("uspObtenerColoniasAdeudo", añoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspObtenerDescuentosDisponibles(Nullable<int> año)
        {
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspObtenerDescuentosDisponibles", añoParameter);
        }
    
        public virtual ObjectResult<uspObtenerDetalleManzana_Result> uspObtenerDetalleManzana(Nullable<int> idColonia, Nullable<int> año, Nullable<int> manzana)
        {
            var idColoniaParameter = idColonia.HasValue ?
                new ObjectParameter("idColonia", idColonia) :
                new ObjectParameter("idColonia", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var manzanaParameter = manzana.HasValue ?
                new ObjectParameter("manzana", manzana) :
                new ObjectParameter("manzana", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspObtenerDetalleManzana_Result>("uspObtenerDetalleManzana", idColoniaParameter, añoParameter, manzanaParameter);
        }
    
        public virtual ObjectResult<uspObtenerManzanaAdeudo_Result> uspObtenerManzanaAdeudo(Nullable<int> idColonia, Nullable<int> año)
        {
            var idColoniaParameter = idColonia.HasValue ?
                new ObjectParameter("idColonia", idColonia) :
                new ObjectParameter("idColonia", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspObtenerManzanaAdeudo_Result>("uspObtenerManzanaAdeudo", idColoniaParameter, añoParameter);
        }
    
        public virtual ObjectResult<string> uspObtenerManzanasDeColonia(Nullable<int> idColonia)
        {
            var idColoniaParameter = idColonia.HasValue ?
                new ObjectParameter("idColonia", idColonia) :
                new ObjectParameter("idColonia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("uspObtenerManzanasDeColonia", idColoniaParameter);
        }
    
        public virtual ObjectResult<uspObtenerManzanasPorColonia_Result> uspObtenerManzanasPorColonia(Nullable<int> idColonia, Nullable<int> año)
        {
            var idColoniaParameter = idColonia.HasValue ?
                new ObjectParameter("idColonia", idColonia) :
                new ObjectParameter("idColonia", typeof(int));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspObtenerManzanasPorColonia_Result>("uspObtenerManzanasPorColonia", idColoniaParameter, añoParameter);
        }
    
        public virtual ObjectResult<uspObtenerMovimientosDinero_Result> uspObtenerMovimientosDinero(string tipoPredio, Nullable<int> año, Nullable<int> idColonia, Nullable<int> manzana)
        {
            var tipoPredioParameter = tipoPredio != null ?
                new ObjectParameter("tipoPredio", tipoPredio) :
                new ObjectParameter("tipoPredio", typeof(string));
    
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var idColoniaParameter = idColonia.HasValue ?
                new ObjectParameter("idColonia", idColonia) :
                new ObjectParameter("idColonia", typeof(int));
    
            var manzanaParameter = manzana.HasValue ?
                new ObjectParameter("manzana", manzana) :
                new ObjectParameter("manzana", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspObtenerMovimientosDinero_Result>("uspObtenerMovimientosDinero", tipoPredioParameter, añoParameter, idColoniaParameter, manzanaParameter);
        }
    
        public virtual ObjectResult<uspObtenerMovimientosDineroDetalle_Result> uspObtenerMovimientosDineroDetalle(Nullable<int> año, Nullable<int> idColonia, string tipoConsulta)
        {
            var añoParameter = año.HasValue ?
                new ObjectParameter("año", año) :
                new ObjectParameter("año", typeof(int));
    
            var idColoniaParameter = idColonia.HasValue ?
                new ObjectParameter("idColonia", idColonia) :
                new ObjectParameter("idColonia", typeof(int));
    
            var tipoConsultaParameter = tipoConsulta != null ?
                new ObjectParameter("tipoConsulta", tipoConsulta) :
                new ObjectParameter("tipoConsulta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspObtenerMovimientosDineroDetalle_Result>("uspObtenerMovimientosDineroDetalle", añoParameter, idColoniaParameter, tipoConsultaParameter);
        }
    
        public virtual ObjectResult<uspObtenerPagos_Result> uspObtenerPagos(string clave, string numeroDeCuenta)
        {
            var claveParameter = clave != null ?
                new ObjectParameter("clave", clave) :
                new ObjectParameter("clave", typeof(string));
    
            var numeroDeCuentaParameter = numeroDeCuenta != null ?
                new ObjectParameter("numeroDeCuenta", numeroDeCuenta) :
                new ObjectParameter("numeroDeCuenta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspObtenerPagos_Result>("uspObtenerPagos", claveParameter, numeroDeCuentaParameter);
        }
    
        public virtual ObjectResult<uspObtenerPagosPredial_Result> uspObtenerPagosPredial(Nullable<System.DateTime> fechaIncio, Nullable<System.DateTime> fechaFin, Nullable<int> idCaja, Nullable<int> idFormaDePago)
        {
            var fechaIncioParameter = fechaIncio.HasValue ?
                new ObjectParameter("fechaIncio", fechaIncio) :
                new ObjectParameter("fechaIncio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("idCaja", idCaja) :
                new ObjectParameter("idCaja", typeof(int));
    
            var idFormaDePagoParameter = idFormaDePago.HasValue ?
                new ObjectParameter("idFormaDePago", idFormaDePago) :
                new ObjectParameter("idFormaDePago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspObtenerPagosPredial_Result>("uspObtenerPagosPredial", fechaIncioParameter, fechaFinParameter, idCajaParameter, idFormaDePagoParameter);
        }
    
        public virtual ObjectResult<uspObtenerPagosTraslados_Result> uspObtenerPagosTraslados(Nullable<System.DateTime> fechaIncio, Nullable<System.DateTime> fechaFin, Nullable<int> idCaja, Nullable<int> idFormaDePago)
        {
            var fechaIncioParameter = fechaIncio.HasValue ?
                new ObjectParameter("fechaIncio", fechaIncio) :
                new ObjectParameter("fechaIncio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("fechaFin", fechaFin) :
                new ObjectParameter("fechaFin", typeof(System.DateTime));
    
            var idCajaParameter = idCaja.HasValue ?
                new ObjectParameter("idCaja", idCaja) :
                new ObjectParameter("idCaja", typeof(int));
    
            var idFormaDePagoParameter = idFormaDePago.HasValue ?
                new ObjectParameter("idFormaDePago", idFormaDePago) :
                new ObjectParameter("idFormaDePago", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspObtenerPagosTraslados_Result>("uspObtenerPagosTraslados", fechaIncioParameter, fechaFinParameter, idCajaParameter, idFormaDePagoParameter);
        }
    
        public virtual ObjectResult<uspObtenerPrediosSinPropietario_Result> uspObtenerPrediosSinPropietario()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspObtenerPrediosSinPropietario_Result>("uspObtenerPrediosSinPropietario");
        }
    
        public virtual int uspReiniciaTabla(string nombreTabla)
        {
            var nombreTablaParameter = nombreTabla != null ?
                new ObjectParameter("nombreTabla", nombreTabla) :
                new ObjectParameter("nombreTabla", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspReiniciaTabla", nombreTablaParameter);
        }
    }
}
